/*
* Include bootstrap mixin
*/
@import "../../../bower_components/bootstrap-sass/assets/stylesheets/bootstrap/mixins";

/*
* Custom mixin
*/
$landscape: "#{$screen} and (orientation: landscape)";
$portrait: "#{$screen} and (orientation: portrait)";

/* < 480 */
$xs-up: $screen;
$xs-only: "#{$screen} and (max-width: #{upper-bound($xs-range)})";

/* 480 < 600 */
$sm-up: "#{$screen} and (min-width:#{lower-bound($sm-range)})";
$sm-down: "#{$screen} and (max-width:#{upper-bound($sm-range)})";
$sm-only: "#{$screen} and (min-width:#{lower-bound($sm-range)}) and (max-width:#{upper-bound($sm-range)})";

/* 600 < 960 */
$md-up: "#{$screen} and (min-width:#{lower-bound($md-range)})";
$md-down: "#{$screen} and (max-width:#{upper-bound($md-range)})";
$md-only: "#{$screen} and (min-width:#{lower-bound($md-range)}) and (max-width:#{upper-bound($md-range)})";

/* 960 < 1280 */
$lg-up: "#{$screen} and (min-width:#{lower-bound($lg-range)})";
$lg-down: "#{$screen} and (max-width:#{upper-bound($lg-range)})";
$lg-only: "#{$screen} and (min-width:#{lower-bound($lg-range)}) and (max-width:#{upper-bound($lg-range)})";

/* 1280 < 1440 */
$xl-up: "#{$screen} and (min-width:#{lower-bound($xl-range)})";
$xl-down: "#{$screen} and (max-width:#{upper-bound($xl-range)})";
$xl-only: "#{$screen} and (min-width:#{lower-bound($xl-range)}) and (max-width:#{upper-bound($xl-range)})";


@mixin btn($height, $background: transparent, $color: #fff, $font-size: $baseFontSize) {
	height: $height;
	line-height: $height;
	padding: 0 $height / 2;
	background-color: $background;
	color: $color;
	font-size: $font-size;
	border: 0;
	display: inline-block;
	text-align: center;
	text-decoration: none;
	cursor: pointer;
	white-space: nowrap;
	vertical-align: middle;
	-ms-touch-action: manipulation;
	touch-action: manipulation;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	&:hover,
	&:active,
	&:focus {
		text-decoration: none;
		outline: none;
	}
}

@mixin center() {
	position: absolute;
	margin: auto;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
}

@mixin muted($color: #000, $opacity: 0.5) {
	position: relative;
	&:before {
		content: '';
		position: absolute;
		left: 0;
		right: 0;
		top: 0;
		bottom: 0;
		background-color: rgba($color, $opacity);
	}
}


/*
 * Png sprite
 */

@mixin spriteWidth($sprite) {
  width: nth($sprite, 5);
}

@mixin spriteHeight($sprite) {
  height: nth($sprite, 6);
}

@mixin spritePosition($sprite) {
  background-position: nth($sprite, 3) nth($sprite, 4);
}

@mixin spriteImage($sprite) {
  background-image: url("../images/" + nth($sprite, 9));
}

@mixin sprite($sprite) {
  @include spriteImage($sprite);
  @include spritePosition($sprite);
  @include spriteWidth($sprite);
  @include spriteHeight($sprite);
  display: inline-block;
}


/*
 * Svg sprite
 */

%sprite-svg {
	display: inline-block;
	background-image: url(map-get($spriteSvg, svgPath));
	background-size: px2em(map-get($spriteSvg, width)) px2em(map-get($spriteSvg, height));
}

%ie-sprite-svg {
	background-image: url(map-get($spriteSvg, pngPath));
}

@mixin ie-spriteSvg($icon, $type: all) {
	$iconMap: icon-attr($icon);

	@if $ieSprite {
		#{$ieSprite} & {
			@if $type == all {
				// Shares the PNG background
				@extend %ie-sprite-svg;
			}
			// Outputs dimensions of icon
			@if $type == all or $type == size {
				width: map-get($iconMap, width);
				height: map-get($iconMap, height);
			}
			// // Outputs background position
			@if $type == all or $type == bg {
				background-position: (map-get($iconMap, x) - 5) (map-get($iconMap, y) - 5);
			}
		}
	}
}

// For use with the gulp sprite plugin
@mixin spriteSvg($icon, $type: all) {

	font-size: $baseFontSize;

	@if $type == all {
		// Shares the backgrounds
		@extend %sprite-svg;
	}

	$iconMap: icon-attr($icon);

	// Outputs dimensions in em
	@if $type == all or $type == width {
		width: px2em(map-get($iconMap, width) + 1);
	}
	// Outputs dimensions in em
	@if $type == all or $type == height {
		height: px2em(map-get($iconMap, height) + 1);
	}
	// Outputs background position in em | -5px because spacing:5
	@if $type == all or $type == bg {
		background-position: px2em(map-get($iconMap, x) - 5) px2em(map-get($iconMap, y) - 5);
	}

	// Add ie fallback
	@include ie-spriteSvg($icon, $type);
}